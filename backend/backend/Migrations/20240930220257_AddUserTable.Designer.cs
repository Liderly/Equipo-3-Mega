// <auto-generated />
using System;
using Backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20240930220257_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Suscriber", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<int>("post_code")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("street_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zone")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id");

                    b.HasIndex("post_code");

                    b.HasIndex("zone");

                    b.HasIndex("last_name", "name");

                    b.ToTable("Subscriptor", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            last_name = "Garcia",
                            name = "Juan",
                            number = 1,
                            phone = 3919890119L,
                            post_code = 12345,
                            street = "Calle 1",
                            street_number = "1219",
                            zone = "Zona Norte"
                        },
                        new
                        {
                            id = 2,
                            last_name = "Hernandez",
                            name = "Maria",
                            number = 2,
                            phone = 3919890120L,
                            post_code = 12346,
                            street = "Calle 2",
                            street_number = "2468",
                            zone = "Zona Sur"
                        },
                        new
                        {
                            id = 3,
                            last_name = "Lopez",
                            name = "Pedro",
                            number = 3,
                            phone = 3919890121L,
                            post_code = 12347,
                            street = "Calle 3",
                            street_number = "3579",
                            zone = "Zona Este"
                        },
                        new
                        {
                            id = 4,
                            last_name = "Martinez",
                            name = "Ana",
                            number = 4,
                            phone = 3919890122L,
                            post_code = 12348,
                            street = "Calle 4",
                            street_number = "4680",
                            zone = "Zona Oeste"
                        },
                        new
                        {
                            id = 5,
                            last_name = "Gomez",
                            name = "Luis",
                            number = 5,
                            phone = 3919890123L,
                            post_code = 12349,
                            street = "Calle 5",
                            street_number = "5791",
                            zone = "Zona Centro"
                        },
                        new
                        {
                            id = 6,
                            last_name = "Rodriguez",
                            name = "Laura",
                            number = 6,
                            phone = 3919890124L,
                            post_code = 12350,
                            street = "Calle 6",
                            street_number = "6802",
                            zone = "Zona Norte"
                        },
                        new
                        {
                            id = 7,
                            last_name = "Perez",
                            name = "Carlos",
                            number = 7,
                            phone = 3919890125L,
                            post_code = 12351,
                            street = "Calle 7",
                            street_number = "7913",
                            zone = "Zona Sur"
                        },
                        new
                        {
                            id = 8,
                            last_name = "Ramirez",
                            name = "Elena",
                            number = 8,
                            phone = 3919890126L,
                            post_code = 12352,
                            street = "Calle 8",
                            street_number = "8024",
                            zone = "Zona Este"
                        },
                        new
                        {
                            id = 9,
                            last_name = "Sanchez",
                            name = "Miguel",
                            number = 9,
                            phone = 3919890127L,
                            post_code = 12353,
                            street = "Calle 9",
                            street_number = "9135",
                            zone = "Zona Oeste"
                        },
                        new
                        {
                            id = 10,
                            last_name = "Torres",
                            name = "Jose",
                            number = 10,
                            phone = 3919890128L,
                            post_code = 12354,
                            street = "Calle 10",
                            street_number = "1046",
                            zone = "Zona Centro"
                        },
                        new
                        {
                            id = 11,
                            last_name = "Diaz",
                            name = "Adriana",
                            number = 11,
                            phone = 3919890129L,
                            post_code = 12355,
                            street = "Calle 11",
                            street_number = "1157",
                            zone = "Zona Norte"
                        },
                        new
                        {
                            id = 12,
                            last_name = "Gutierrez",
                            name = "Fernando",
                            number = 12,
                            phone = 3919890130L,
                            post_code = 12356,
                            street = "Calle 12",
                            street_number = "1268",
                            zone = "Zona Sur"
                        },
                        new
                        {
                            id = 13,
                            last_name = "Vazquez",
                            name = "Sofia",
                            number = 13,
                            phone = 3919890131L,
                            post_code = 12357,
                            street = "Avenida Principal",
                            street_number = "2435",
                            zone = "Zona Noreste"
                        },
                        new
                        {
                            id = 14,
                            last_name = "Fernandez",
                            name = "Roberto",
                            number = 14,
                            phone = 3919890132L,
                            post_code = 12358,
                            street = "Boulevard Central",
                            street_number = "789",
                            zone = "Zona Sureste"
                        },
                        new
                        {
                            id = 15,
                            last_name = "Ortega",
                            name = "Carmen",
                            number = 15,
                            phone = 3919890133L,
                            post_code = 12359,
                            street = "Paseo de la Reforma",
                            street_number = "5012",
                            zone = "Zona Noroeste"
                        },
                        new
                        {
                            id = 16,
                            last_name = "Morales",
                            name = "Javier",
                            number = 16,
                            phone = 3919890134L,
                            post_code = 12360,
                            street = "Calzada de los Heroes",
                            street_number = "1670",
                            zone = "Zona Suroeste"
                        },
                        new
                        {
                            id = 17,
                            last_name = "Castillo",
                            name = "Gabriela",
                            number = 17,
                            phone = 3919890135L,
                            post_code = 12361,
                            street = "Circuito Interior",
                            street_number = "3845",
                            zone = "Zona Metropolitana"
                        },
                        new
                        {
                            id = 18,
                            last_name = "Ruiz",
                            name = "Alejandro",
                            number = 18,
                            phone = 3919890136L,
                            post_code = 12362,
                            street = "Avenida Insurgentes",
                            street_number = "9276",
                            zone = "Zona Histórica"
                        },
                        new
                        {
                            id = 19,
                            last_name = "Mendoza",
                            name = "Patricia",
                            number = 19,
                            phone = 3919890137L,
                            post_code = 12363,
                            street = "Calle del Bosque",
                            street_number = "4523",
                            zone = "Zona Residencial"
                        },
                        new
                        {
                            id = 20,
                            last_name = "Vargas",
                            name = "Ricardo",
                            number = 20,
                            phone = 3919890138L,
                            post_code = 12364,
                            street = "Avenida de las Flores",
                            street_number = "6789",
                            zone = "Zona Comercial"
                        });
                });

            modelBuilder.Entity("backend.Models.Assignment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("Assigment_date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_order")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("Finish_date")
                        .HasColumnType("datetime")
                        .HasColumnName("date_finish");

                    b.Property<int>("service_id")
                        .HasColumnType("int");

                    b.Property<string>("status_assigment")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Pendiente")
                        .HasColumnName("state_order");

                    b.Property<int>("subscriber_id")
                        .HasColumnType("int");

                    b.Property<int>("technician_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("service_id");

                    b.HasIndex("status_assigment");

                    b.HasIndex("subscriber_id");

                    b.HasIndex("technician_id");

                    b.ToTable("Assignments_orders", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Assigment_date = new DateTime(2024, 9, 30, 0, 22, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 18, 11, 0, 0, DateTimeKind.Unspecified),
                            service_id = 1,
                            status_assigment = "Completado",
                            subscriber_id = 1,
                            technician_id = 1
                        },
                        new
                        {
                            id = 2,
                            Assigment_date = new DateTime(2024, 10, 1, 16, 52, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 8, 40, 0, 0, DateTimeKind.Unspecified),
                            service_id = 2,
                            status_assigment = "Completado",
                            subscriber_id = 2,
                            technician_id = 2
                        },
                        new
                        {
                            id = 3,
                            Assigment_date = new DateTime(2024, 10, 1, 21, 39, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 20, 3, 0, 0, DateTimeKind.Unspecified),
                            service_id = 2,
                            status_assigment = "Completado",
                            subscriber_id = 2,
                            technician_id = 2
                        },
                        new
                        {
                            id = 4,
                            Assigment_date = new DateTime(2024, 10, 1, 6, 21, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 10, 29, 0, 0, DateTimeKind.Unspecified),
                            service_id = 3,
                            status_assigment = "Completado",
                            subscriber_id = 3,
                            technician_id = 3
                        },
                        new
                        {
                            id = 5,
                            Assigment_date = new DateTime(2024, 9, 30, 23, 5, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 4, 16, 0, 0, DateTimeKind.Unspecified),
                            service_id = 4,
                            status_assigment = "Completado",
                            subscriber_id = 4,
                            technician_id = 4
                        },
                        new
                        {
                            id = 6,
                            Assigment_date = new DateTime(2024, 10, 1, 5, 53, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 20, 6, 0, 0, DateTimeKind.Unspecified),
                            service_id = 5,
                            status_assigment = "Completado",
                            subscriber_id = 5,
                            technician_id = 5
                        },
                        new
                        {
                            id = 7,
                            Assigment_date = new DateTime(2024, 9, 30, 0, 28, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 20, 29, 0, 0, DateTimeKind.Unspecified),
                            service_id = 6,
                            status_assigment = "Completado",
                            subscriber_id = 6,
                            technician_id = 6
                        },
                        new
                        {
                            id = 8,
                            Assigment_date = new DateTime(2024, 10, 1, 4, 23, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 11, 53, 0, 0, DateTimeKind.Unspecified),
                            service_id = 7,
                            status_assigment = "Completado",
                            subscriber_id = 7,
                            technician_id = 7
                        },
                        new
                        {
                            id = 9,
                            Assigment_date = new DateTime(2024, 9, 30, 15, 17, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 10, 7, 0, 0, DateTimeKind.Unspecified),
                            service_id = 8,
                            status_assigment = "Completado",
                            subscriber_id = 8,
                            technician_id = 8
                        },
                        new
                        {
                            id = 10,
                            Assigment_date = new DateTime(2024, 9, 30, 11, 37, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 1, 39, 0, 0, DateTimeKind.Unspecified),
                            service_id = 9,
                            status_assigment = "Completado",
                            subscriber_id = 9,
                            technician_id = 9
                        },
                        new
                        {
                            id = 11,
                            Assigment_date = new DateTime(2024, 9, 30, 16, 57, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 3, 5, 0, 0, DateTimeKind.Unspecified),
                            service_id = 10,
                            status_assigment = "Completado",
                            subscriber_id = 10,
                            technician_id = 10
                        },
                        new
                        {
                            id = 12,
                            Assigment_date = new DateTime(2024, 10, 1, 21, 12, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 18, 37, 0, 0, DateTimeKind.Unspecified),
                            service_id = 11,
                            status_assigment = "Completado",
                            subscriber_id = 11,
                            technician_id = 11
                        },
                        new
                        {
                            id = 13,
                            Assigment_date = new DateTime(2024, 10, 1, 23, 39, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 11, 37, 0, 0, DateTimeKind.Unspecified),
                            service_id = 12,
                            status_assigment = "Completado",
                            subscriber_id = 12,
                            technician_id = 12
                        },
                        new
                        {
                            id = 14,
                            Assigment_date = new DateTime(2024, 9, 30, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 21, 25, 0, 0, DateTimeKind.Unspecified),
                            service_id = 13,
                            status_assigment = "Completado",
                            subscriber_id = 1,
                            technician_id = 1
                        },
                        new
                        {
                            id = 15,
                            Assigment_date = new DateTime(2024, 10, 1, 20, 35, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 14, 44, 0, 0, DateTimeKind.Unspecified),
                            service_id = 14,
                            status_assigment = "Completado",
                            subscriber_id = 2,
                            technician_id = 2
                        },
                        new
                        {
                            id = 16,
                            Assigment_date = new DateTime(2024, 9, 30, 21, 50, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 2, 38, 0, 0, DateTimeKind.Unspecified),
                            service_id = 15,
                            status_assigment = "Completado",
                            subscriber_id = 3,
                            technician_id = 3
                        },
                        new
                        {
                            id = 17,
                            Assigment_date = new DateTime(2024, 10, 1, 16, 14, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 8, 8, 0, 0, DateTimeKind.Unspecified),
                            service_id = 16,
                            status_assigment = "Completado",
                            subscriber_id = 4,
                            technician_id = 4
                        },
                        new
                        {
                            id = 18,
                            Assigment_date = new DateTime(2024, 10, 1, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 7, 24, 0, 0, DateTimeKind.Unspecified),
                            service_id = 17,
                            status_assigment = "Completado",
                            subscriber_id = 5,
                            technician_id = 5
                        },
                        new
                        {
                            id = 19,
                            Assigment_date = new DateTime(2024, 10, 1, 5, 17, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 9, 3, 0, 0, DateTimeKind.Unspecified),
                            service_id = 5,
                            status_assigment = "Completado",
                            subscriber_id = 6,
                            technician_id = 6
                        },
                        new
                        {
                            id = 20,
                            Assigment_date = new DateTime(2024, 9, 30, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 5, 21, 0, 0, DateTimeKind.Unspecified),
                            service_id = 2,
                            status_assigment = "Completado",
                            subscriber_id = 7,
                            technician_id = 7
                        },
                        new
                        {
                            id = 21,
                            Assigment_date = new DateTime(2024, 9, 30, 22, 30, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 17, 34, 0, 0, DateTimeKind.Unspecified),
                            service_id = 1,
                            status_assigment = "Completado",
                            subscriber_id = 8,
                            technician_id = 8
                        },
                        new
                        {
                            id = 22,
                            Assigment_date = new DateTime(2024, 9, 30, 18, 52, 0, 0, DateTimeKind.Unspecified),
                            service_id = 3,
                            status_assigment = "Pendiente",
                            subscriber_id = 9,
                            technician_id = 9
                        },
                        new
                        {
                            id = 23,
                            Assigment_date = new DateTime(2024, 10, 1, 17, 2, 0, 0, DateTimeKind.Unspecified),
                            service_id = 4,
                            status_assigment = "En Progreso",
                            subscriber_id = 10,
                            technician_id = 10
                        },
                        new
                        {
                            id = 24,
                            Assigment_date = new DateTime(2024, 10, 1, 0, 46, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 1, 22, 32, 0, 0, DateTimeKind.Unspecified),
                            service_id = 5,
                            status_assigment = "Completado",
                            subscriber_id = 11,
                            technician_id = 11
                        },
                        new
                        {
                            id = 25,
                            Assigment_date = new DateTime(2024, 10, 1, 2, 44, 0, 0, DateTimeKind.Unspecified),
                            service_id = 6,
                            status_assigment = "Pendiente",
                            subscriber_id = 12,
                            technician_id = 12
                        },
                        new
                        {
                            id = 26,
                            Assigment_date = new DateTime(2024, 9, 30, 6, 4, 0, 0, DateTimeKind.Unspecified),
                            service_id = 7,
                            status_assigment = "En Progreso",
                            subscriber_id = 1,
                            technician_id = 1
                        },
                        new
                        {
                            id = 27,
                            Assigment_date = new DateTime(2024, 10, 1, 7, 43, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 12, 52, 0, 0, DateTimeKind.Unspecified),
                            service_id = 8,
                            status_assigment = "Completado",
                            subscriber_id = 2,
                            technician_id = 2
                        },
                        new
                        {
                            id = 28,
                            Assigment_date = new DateTime(2024, 10, 1, 13, 51, 0, 0, DateTimeKind.Unspecified),
                            service_id = 9,
                            status_assigment = "Pendiente",
                            subscriber_id = 3,
                            technician_id = 3
                        },
                        new
                        {
                            id = 29,
                            Assigment_date = new DateTime(2024, 10, 1, 1, 23, 0, 0, DateTimeKind.Unspecified),
                            service_id = 10,
                            status_assigment = "En Progreso",
                            subscriber_id = 4,
                            technician_id = 4
                        },
                        new
                        {
                            id = 30,
                            Assigment_date = new DateTime(2024, 10, 1, 14, 55, 0, 0, DateTimeKind.Unspecified),
                            Finish_date = new DateTime(2024, 10, 2, 23, 15, 0, 0, DateTimeKind.Unspecified),
                            service_id = 11,
                            status_assigment = "Completado",
                            subscriber_id = 5,
                            technician_id = 5
                        },
                        new
                        {
                            id = 31,
                            Assigment_date = new DateTime(2024, 10, 1, 10, 40, 0, 0, DateTimeKind.Unspecified),
                            service_id = 12,
                            status_assigment = "Pendiente",
                            subscriber_id = 6,
                            technician_id = 6
                        });
                });

            modelBuilder.Entity("backend.Models.Bonus_tab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("bonus")
                        .HasColumnType("int");

                    b.Property<int>("max_range")
                        .HasColumnType("int");

                    b.Property<int>("min_range")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bonus_tabs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            bonus = 0,
                            max_range = 80,
                            min_range = 0
                        },
                        new
                        {
                            Id = 2,
                            bonus = 300,
                            max_range = 150,
                            min_range = 81
                        },
                        new
                        {
                            Id = 3,
                            bonus = 500,
                            max_range = 210,
                            min_range = 151
                        },
                        new
                        {
                            Id = 4,
                            bonus = 800,
                            max_range = 300,
                            min_range = 211
                        },
                        new
                        {
                            Id = 5,
                            bonus = 1000,
                            max_range = 400,
                            min_range = 301
                        });
                });

            modelBuilder.Entity("backend.Models.JobsCatalog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("name");

                    b.HasIndex("points");

                    b.ToTable("jobs_catalog", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "Instalación y activación de línea telefónica residencial.",
                            duration = 2,
                            name = "Instalación de Línea Telefónica",
                            points = 50
                        },
                        new
                        {
                            id = 2,
                            description = "Resolución de problemas en la línea telefónica.",
                            duration = 1,
                            name = "Reparación de Línea Telefónica",
                            points = 40
                        },
                        new
                        {
                            id = 3,
                            description = "Cambio de número telefónico en la misma línea.",
                            duration = 1,
                            name = "Cambio de Número Telefónico",
                            points = 30
                        },
                        new
                        {
                            id = 4,
                            description = "Configuración de funciones en teléfono fijo.",
                            duration = 1,
                            name = "Configuración de Teléfono Fijo",
                            points = 20
                        },
                        new
                        {
                            id = 5,
                            description = "Instalación de modem y activación del servicio de internet.",
                            duration = 3,
                            name = "Instalación de Internet",
                            points = 80
                        },
                        new
                        {
                            id = 6,
                            description = "Revisión y mantenimiento preventivo del equipo de internet.",
                            duration = 1,
                            name = "Mantenimiento de Internet",
                            points = 30
                        },
                        new
                        {
                            id = 7,
                            description = "Configuración de la red Wi-Fi y dispositivos conectados.",
                            duration = 2,
                            name = "Configuración de Red Wi-Fi",
                            points = 60
                        },
                        new
                        {
                            id = 8,
                            description = "Cambio de equipo por actualización o mal funcionamiento.",
                            duration = 1,
                            name = "Cambio de Modem",
                            points = 40
                        },
                        new
                        {
                            id = 9,
                            description = "Asistencia remota o en sitio para problemas de internet.",
                            duration = 1,
                            name = "Soporte Técnico de Internet",
                            points = 30
                        },
                        new
                        {
                            id = 10,
                            description = "Instalación de decodificador y activación de canales básicos.",
                            duration = 2,
                            name = "Instalación de TV Básica",
                            points = 50
                        },
                        new
                        {
                            id = 11,
                            description = "Instalación de decodificador y activación de canales premium.",
                            duration = 3,
                            name = "Instalación de TV Premium",
                            points = 80
                        },
                        new
                        {
                            id = 12,
                            description = "Resolución de problemas con la señal de televisión.",
                            duration = 1,
                            name = "Reparación de Señal de TV",
                            points = 40
                        },
                        new
                        {
                            id = 13,
                            description = "Cambio de equipo por actualización o mal funcionamiento.",
                            duration = 1,
                            name = "Cambio de Decodificador",
                            points = 40
                        },
                        new
                        {
                            id = 14,
                            description = "Configuración y personalización de canales de TV.",
                            duration = 1,
                            name = "Configuración de Canales",
                            points = 30
                        },
                        new
                        {
                            id = 15,
                            description = "Instalación de servicio de telefonía, internet y TV.",
                            duration = 4,
                            name = "Paquete Triple Play",
                            points = 120
                        },
                        new
                        {
                            id = 16,
                            description = "Actualización de servicios combinados de telefonía, internet y TV.",
                            duration = 2,
                            name = "Actualización de Servicios",
                            points = 70
                        },
                        new
                        {
                            id = 17,
                            description = "Asistencia técnica para problemas en servicios combinados.",
                            duration = 2,
                            name = "Soporte Integral de Servicios",
                            points = 50
                        });
                });

            modelBuilder.Entity("backend.Models.Quadrille", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("quadrille_number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("quadrille_number");

                    b.ToTable("Quadrille", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            quadrille_number = 1001
                        },
                        new
                        {
                            Id = 2,
                            quadrille_number = 1002
                        },
                        new
                        {
                            Id = 3,
                            quadrille_number = 1003
                        },
                        new
                        {
                            Id = 4,
                            quadrille_number = 1004
                        },
                        new
                        {
                            Id = 5,
                            quadrille_number = 1005
                        },
                        new
                        {
                            Id = 6,
                            quadrille_number = 1006
                        },
                        new
                        {
                            Id = 7,
                            quadrille_number = 1007
                        },
                        new
                        {
                            Id = 8,
                            quadrille_number = 1008
                        },
                        new
                        {
                            Id = 9,
                            quadrille_number = 1009
                        },
                        new
                        {
                            Id = 10,
                            quadrille_number = 1010
                        });
                });

            modelBuilder.Entity("backend.Models.Technician", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("employee_number")
                        .HasColumnType("int");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<int>("quadrille_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("employee_number")
                        .IsUnique();

                    b.HasIndex("quadrille_id");

                    b.HasIndex("last_name", "name");

                    b.ToTable("Technicians", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            employee_number = 10001,
                            last_name = "Gomez",
                            name = "Luis",
                            phone = 3310194098L,
                            quadrille_id = 1
                        },
                        new
                        {
                            id = 2,
                            employee_number = 10002,
                            last_name = "Rodriguez",
                            name = "Laura",
                            phone = 3310194099L,
                            quadrille_id = 1
                        },
                        new
                        {
                            id = 3,
                            employee_number = 10003,
                            last_name = "Perez",
                            name = "Carlos",
                            phone = 3310194100L,
                            quadrille_id = 2
                        },
                        new
                        {
                            id = 4,
                            employee_number = 10004,
                            last_name = "Ramirez",
                            name = "Elena",
                            phone = 3310194101L,
                            quadrille_id = 2
                        },
                        new
                        {
                            id = 5,
                            employee_number = 10005,
                            last_name = "Sanchez",
                            name = "Miguel",
                            phone = 3310194102L,
                            quadrille_id = 3
                        },
                        new
                        {
                            id = 6,
                            employee_number = 10006,
                            last_name = "Torres",
                            name = "Jose",
                            phone = 3310194103L,
                            quadrille_id = 3
                        },
                        new
                        {
                            id = 7,
                            employee_number = 10007,
                            last_name = "Diaz",
                            name = "Adriana",
                            phone = 3310194104L,
                            quadrille_id = 4
                        },
                        new
                        {
                            id = 8,
                            employee_number = 10008,
                            last_name = "Gutierrez",
                            name = "Fernando",
                            phone = 3310194105L,
                            quadrille_id = 4
                        },
                        new
                        {
                            id = 9,
                            employee_number = 10009,
                            last_name = "Mendez",
                            name = "Sofia",
                            phone = 3310194106L,
                            quadrille_id = 5
                        },
                        new
                        {
                            id = 10,
                            employee_number = 10010,
                            last_name = "Ortega",
                            name = "Ricardo",
                            phone = 3310194107L,
                            quadrille_id = 5
                        },
                        new
                        {
                            id = 11,
                            employee_number = 10011,
                            last_name = "Martinez",
                            name = "Paola",
                            phone = 3310194108L,
                            quadrille_id = 6
                        },
                        new
                        {
                            id = 12,
                            employee_number = 10012,
                            last_name = "Gonzalez",
                            name = "David",
                            phone = 3310194109L,
                            quadrille_id = 6
                        },
                        new
                        {
                            id = 13,
                            employee_number = 10013,
                            last_name = "Vargas",
                            name = "Ana",
                            phone = 3310194110L,
                            quadrille_id = 7
                        },
                        new
                        {
                            id = 14,
                            employee_number = 10014,
                            last_name = "Castro",
                            name = "Javier",
                            phone = 3310194111L,
                            quadrille_id = 7
                        },
                        new
                        {
                            id = 15,
                            employee_number = 10015,
                            last_name = "Flores",
                            name = "Mariana",
                            phone = 3310194112L,
                            quadrille_id = 8
                        },
                        new
                        {
                            id = 16,
                            employee_number = 10016,
                            last_name = "Rojas",
                            name = "Gabriel",
                            phone = 3310194113L,
                            quadrille_id = 8
                        },
                        new
                        {
                            id = 17,
                            employee_number = 10017,
                            last_name = "Herrera",
                            name = "Valentina",
                            phone = 3310194114L,
                            quadrille_id = 9
                        },
                        new
                        {
                            id = 18,
                            employee_number = 10018,
                            last_name = "Morales",
                            name = "Alejandro",
                            phone = 3310194115L,
                            quadrille_id = 9
                        },
                        new
                        {
                            id = 19,
                            employee_number = 10019,
                            last_name = "Jimenez",
                            name = "Isabella",
                            phone = 3310194116L,
                            quadrille_id = 10
                        },
                        new
                        {
                            id = 20,
                            employee_number = 10020,
                            last_name = "Acosta",
                            name = "Daniel",
                            phone = 3310194117L,
                            quadrille_id = 10
                        });
                });

            modelBuilder.Entity("backend.src.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("num_emp")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("num_emp")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            email = "admin@megacable.com.mx",
                            num_emp = 1,
                            password = "$2a$11$Fp1/R8n7bCX5ViSJngaJ1eUsfp1YlDR1QIieylUyA3NvDendFzKMu",
                            role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            email = "luis.gomez@megacable.com.mx",
                            num_emp = 10001,
                            password = "$2a$11$N.B2HG/vGAcm1mYcI8Z9cuIEdRTbi64HxoCGB1ZdhQ2xcgDO9KmHO",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 3,
                            email = "laura.rodriguez@megacable.com.mx",
                            num_emp = 10002,
                            password = "$2a$11$2jlORK7dYkr2u64ovSX5Vu05Y07ye28.a6139NVFLryFNVYAX6roG",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 4,
                            email = "carlos.perez@megacable.com.mx",
                            num_emp = 10003,
                            password = "$2a$11$ECDWQkX4Qf0bO2u/BExMueosjXqyatwKcTrCuofG2N.KKOzuoqPu2",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 5,
                            email = "elena.ramirez@megacable.com.mx",
                            num_emp = 10004,
                            password = "$2a$11$nXNA5OUm5SqR6bS3oTYh/OiaxGhioWUCoFc5uw.LGqNfIuHiAiflO",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 6,
                            email = "miguel.sanchez@megacable.com.mx",
                            num_emp = 10005,
                            password = "$2a$11$PKUvzyNr3qFL9fj41cS3ueo7VbNB48UH5nFdC4fYiNnug3UR.o/iK",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 7,
                            email = "jose.torres@megacable.com.mx",
                            num_emp = 10006,
                            password = "$2a$11$iWoqPnn4Olfu.yVPys9AaOgE6St3vEuW2hVPiLfmv7DRlTgL.Fwdy",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 8,
                            email = "adriana.diaz@megacable.com.mx",
                            num_emp = 10007,
                            password = "$2a$11$u3QEAGRnBvxWcYw.2UXZ7eP44TimqtWQeZkZsVxozyrVMmKnBwpSC",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 9,
                            email = "fernando.gutierrez@megacable.com.mx",
                            num_emp = 10008,
                            password = "$2a$11$Gs7EIl57QSooDuW6uoGBFOOrjHPGeq.nKM3f3PgLOZOCO7XKWHY7K",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 10,
                            email = "sofia.mendez@megacable.com.mx",
                            num_emp = 10009,
                            password = "$2a$11$YsvRFMVJXNYo3YzVoK1LveD8a2WuiHDFuzfYMbpIVCPF.AMux8hgm",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 11,
                            email = "ricardo.ortega@megacable.com.mx",
                            num_emp = 10010,
                            password = "$2a$11$HhyPvCYQGKTyD.m4T2y5r.aUzvOlGV6sU8GZz1wiNy02uqRYmLFiC",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 12,
                            email = "paola.martinez@megacable.com.mx",
                            num_emp = 10011,
                            password = "$2a$11$ISmoLkRGZDa3zgLPE310D.ovoSQLkD/JApFW7QdyvX.gKiDuVUeKC",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 13,
                            email = "david.gonzalez@megacable.com.mx",
                            num_emp = 10012,
                            password = "$2a$11$hauee9A3RC1eyfcUxnLMIOpcjQbA7S57j.k3yzqbTXT8U3cz1r34S",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 14,
                            email = "ana.vargas@megacable.com.mx",
                            num_emp = 10013,
                            password = "$2a$11$oFSb5yzfXBJCE/FdT6Y/gOVHE6t/fbhjUEz7GrqzdyrhD//2I9UDq",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 15,
                            email = "javier.castro@megacable.com.mx",
                            num_emp = 10014,
                            password = "$2a$11$xFwRhg2UVu4OH0jGO2Pf6euLLVLyXHRAHWl55bRvoKOxgqvTFXd46",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 16,
                            email = "mariana.flores@megacable.com.mx",
                            num_emp = 10015,
                            password = "$2a$11$5l/6WpayQKyRL4VxFObtxeXB/Gl..rdzbSJP3bMGLp6TuN71WYrSG",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 17,
                            email = "gabriel.rojas@megacable.com.mx",
                            num_emp = 10016,
                            password = "$2a$11$xrNfzM.6LgitLKQu0m8neeCVoZJjVWAUkWuvrF5895ZBrZIJDMmNq",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 18,
                            email = "valentina.herrera@megacable.com.mx",
                            num_emp = 10017,
                            password = "$2a$11$4.EE0ssZIRRnkwSoUGEI9eKjkkIEd1788y2.p4kz25jleqxbLLUpW",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 19,
                            email = "alejandro.morales@megacable.com.mx",
                            num_emp = 10018,
                            password = "$2a$11$Pq64MIhsApsodqoK2F0afOU88vZq/YW1c9SX8aA13OaMR3hh42slW",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 20,
                            email = "isabella.jimenez@megacable.com.mx",
                            num_emp = 10019,
                            password = "$2a$11$M5LgKql4wJRDsqA87anC.eUcYZ6StufmuhvK93lDU5Gh3ZjMsNuIi",
                            role = "Tecnico"
                        },
                        new
                        {
                            Id = 21,
                            email = "daniel.acosta@megacable.com.mx",
                            num_emp = 10020,
                            password = "$2a$11$RiEVnqnkfJyqdsJwWJc39esCYrhjtEortz6AiErNra65fQlxx2DuO",
                            role = "Tecnico"
                        });
                });

            modelBuilder.Entity("backend.Models.Assignment", b =>
                {
                    b.HasOne("backend.Models.JobsCatalog", "JobsCatalog")
                        .WithMany("Assignments")
                        .HasForeignKey("service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Suscriber", "Subscriptor")
                        .WithMany("Assignments")
                        .HasForeignKey("subscriber_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Technician", "Technician")
                        .WithMany("Assignments")
                        .HasForeignKey("technician_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobsCatalog");

                    b.Navigation("Subscriptor");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("backend.Models.Technician", b =>
                {
                    b.HasOne("backend.Models.Quadrille", "Quadrille")
                        .WithMany("Technicians")
                        .HasForeignKey("quadrille_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quadrille");
                });

            modelBuilder.Entity("Backend.Models.Suscriber", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("backend.Models.JobsCatalog", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("backend.Models.Quadrille", b =>
                {
                    b.Navigation("Technicians");
                });

            modelBuilder.Entity("backend.Models.Technician", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
